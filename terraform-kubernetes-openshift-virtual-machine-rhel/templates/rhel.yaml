apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: ${name}
  namespace: ${namespace}
  annotations:
  labels:
    app: ${name}
spec:
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: ${name}
      spec:
        sourceRef:
          kind: DataSource
          name: ${datasource_name}
          namespace: ${datasource_namespace}
        storage:
          resources:
            requests:
              storage: ${disk_size}
  runStrategy: ${run_strategy}
  template:
    metadata:
      annotations:
        vm.kubevirt.io/flavor: ${flavor}
        vm.kubevirt.io/os: ${os}
        vm.kubevirt.io/workload: ${workload}
      labels:
        kubevirt.io/domain: ${name}
        kubevirt.io/size: ${size}
        network.kubevirt.io/headlessService: headless
    spec:
      architecture: amd64
      domain:
        cpu:
          cores: ${cpu_cores}
          sockets: ${cpu_sockets}
          threads: ${cpu_threads}
        devices:
          disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
          interfaces:
            - masquerade: {}
              model: virtio
              name: default
          rng: {}
        features:
          acpi: {}
          smm:
            enabled: true
        firmware:
          bootloader:
            efi: {}
        machine:
          type: ${machine_type}
        memory:
          guest: ${memory}
        resources: {}
      hostname: ${name}
      networks:
        - name: default
          pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
        - dataVolume:
            name: ${name}
          name: rootdisk
        - cloudInitNoCloud:
            userData: |-
              #cloud-config
              user: ${cloud_user}
              password: ${cloud_user_password}
              chpasswd: { expire: False }
          name: cloudinitdisk